server {
    server_name test.compound-interests.com;
    
    location / {
        proxy_pass http://127.0.0.1:3040;
        # Headers for Next.js app
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        
        # Next.js specific optimizations
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Accept-Encoding "";
        
        # Next.js handles routing internally, so just proxy everything
        proxy_buffering off;
    }
    
    # Handle Next.js static assets (_next/static)
    location /_next/static/ {
        proxy_pass http://127.0.0.1:3040;
        proxy_cache_valid 200 1y;
        add_header Cache-Control "public, immutable";
        expires 1y;
    }
    
    # Handle API routes
    location /api/ {
        proxy_pass http://127.0.0.1:3040;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
    }
    
    # Handle favicon and other static files
    location ~* \.(ico|css|js|gif|jpeg|jpg|png|woff|woff2|ttf|svg|eot|otf)$ {
        proxy_pass http://127.0.0.1:3040;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/test.compound-interests.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/test.compound-interests.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = test.compound-interests.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name test.compound-interests.com;
    return 404; # managed by Certbot
}